<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.jwh.demo</groupId>
    <artifactId>nettyServer</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <!--properties配置-->
    <properties>
        <config_env>dev</config_env>

        <netty_version>3.9.9.Final</netty_version>
        <spring_context_version>5.0.2.RELEASE</spring_context_version>
        <fastjson_version>1.2.44</fastjson_version>
        <log4j_version>1.7.25</log4j_version>
        <c3p0_version>0.9.5.2</c3p0_version>
        <mysql_connector_version>5.1.42</mysql_connector_version>
        <jpa_version>2.0.2.RELEASE</jpa_version>
        <hibernate_core_version>5.1.10.Final</hibernate_core_version>
        <hibernate_entitymanager_version>5.0.11.Final</hibernate_entitymanager_version>
        <aspectj_version>1.8.13</aspectj_version>

        <resource_plugin_version>2.6</resource_plugin_version>
        <compile_plugin_version>3.1</compile_plugin_version>
        <jar_plugin_version>2.4</jar_plugin_version>
        <assembly_plugin_version>2.4</assembly_plugin_version>

        <resource_encoding>UTF-8</resource_encoding>
        <java_version>1.8</java_version>
    </properties>
    <!--依赖配置-->
    <dependencies>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
            <version>${netty_version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring_context_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${log4j_version}</version>
        </dependency>
        <!--dataSource-->
        <!-- https://mvnrepository.com/artifact/com.mchange/c3p0 -->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0_version}</version>
        </dependency>
        <!--mysql connector-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql_connector_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${jpa_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate_core_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate_entitymanager_version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj_version}</version>
        </dependency>
    </dependencies>
    <!--打包插件-->
    <build>
        <!--过滤指定配置文件，可在maven package时指定-D参数修改pom中默认的config_env参数-->
        <filters>
            <filter>src/main/filters/filter.${config_env}.properties</filter>
        </filters>
        <resources>
            <resource>
                <!--配置文件源目录-->
                <directory>src/main/resources</directory>
                <!--配置文件打包目录-->
                <targetPath>${project.build.directory}/classes</targetPath>
                <!--在resources目录下的配置文件中的替代标签是否使用filters中过滤的配置-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--resources plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${resource_plugin_version}</version>
                <configuration>
                    <!--设置过滤的配置文件的编码方式-->
                    <encoding>${resource_encoding}</encoding>
                </configuration>
            </plugin>
            <!--compiler plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compile_plugin_version}</version>
                <configuration>
                    <source>${java_version}</source>
                    <target>${java_version}</target>
                    <!-- 设置源文件编码方式 -->
                    <encoding>${resource_encoding}</encoding>
                </configuration>
            </plugin>
            <!-- The configuration of maven-jar-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar_plugin_version}</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Configuration of the archiver -->
                    <archive>
                        <!--生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <!-- Manifest specific configuration -->
                        <manifest>
                            <!--是否要把第三方jar放到manifest的classpath中-->
                            <addClasspath>true</addClasspath>
                            <!-- 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->
                            <classpathPrefix>lib/</classpathPrefix>
                            <!--应用的main class-->
                            <mainClass>com.jwh.demo.StartServer</mainClass>
                        </manifest>
                    </archive>
                    <!--需要打包进jar的目录-->
                    <includes>
                        <include>com/**</include>
                        <include>resources/**</include>
                    </includes>
                </configuration>
            </plugin>

            <!-- The configuration of maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${assembly_plugin_version}</version>
                <!-- The configuration of the plugin -->
                <configuration>
                    <!-- Specifies the configuration file of the assembly plugin -->
                    <descriptors>
                        <descriptor>src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>